<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>727756048.97086895</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>3546</integer>
						<key>AllWindows</key>
						<true/>
						<key>AlreadyActivatedActionType</key>
						<string>Normal</string>
						<key>Application</key>
						<dict>
							<key>BundleIdentifier</key>
							<string>com.google.Chrome</string>
							<key>Name</key>
							<string>Google Chrome</string>
							<key>NewFile</key>
							<string>/Applications/Google Chrome.app</string>
						</dict>
						<key>MacroActionType</key>
						<string>ActivateApplication</string>
						<key>ReopenWindows</key>
						<true/>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3547</integer>
						<key>MacroActionType</key>
						<string>Pause</string>
						<key>Time</key>
						<string>2</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3548</integer>
						<key>DisplayKind</key>
						<string>None</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array>
							<string>9999</string>
						</array>
						<key>MacroActionType</key>
						<string>ExecuteJavaScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>// Using querySelector to target the button by its class names
var button = document.querySelector('.btn.btn-primary');

// Check if the button exists and then click it
if(button) {
    button.click();
} else {
    console.log('Button not found');
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseModernSyntax</key>
						<true/>
						<key>UseText</key>
						<true/>
						<key>WebBrowser</key>
						<string>Google Chrome</string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3557</integer>
						<key>MacroActionType</key>
						<string>Pause</string>
						<key>Time</key>
						<string>2</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3646</integer>
						<key>ButtonName</key>
						<string>Anyone with a link</string>
						<key>MacroActionType</key>
						<string>PressButton</string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3559</integer>
						<key>MacroActionType</key>
						<string>Pause</string>
						<key>Time</key>
						<string>2</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3560</integer>
						<key>DisplayKind</key>
						<string>None</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array>
							<string>9999</string>
						</array>
						<key>MacroActionType</key>
						<string>ExecuteJavaScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>// Using querySelectorAll to target all elements with the specified class names
var buttons = document.querySelectorAll('.btn.relative.btn-primary.h-8.rounded-lg.border-token-border-light.font-medium.w-full');

// Filter buttons to find the one with the "Confirm" text
var confirmButton = Array.from(buttons).find(button =&gt; button.textContent.trim() === "Confirm");

// Check if the confirm button exists and then click it
if(confirmButton) {
    confirmButton.click();
} else {
    console.log('Confirm button not found');
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseModernSyntax</key>
						<true/>
						<key>UseText</key>
						<true/>
						<key>WebBrowser</key>
						<string>Google Chrome</string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3641</integer>
						<key>MacroActionType</key>
						<string>Pause</string>
						<key>Time</key>
						<string>5</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>3643</integer>
						<key>DisplayKind</key>
						<string>None</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array>
							<string>9999</string>
						</array>
						<key>MacroActionType</key>
						<string>ExecuteJavaScript</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>

const links = document.querySelectorAll('a.btn.relative.btn-primary.h-8.rounded-lg.border-token-border-light.font-medium.w-full');
const targetLink = Array.from(links).find(link =&gt; link.querySelector('div').textContent.trim() === "View GPT");

if (targetLink &amp;&amp; targetLink.href) {
  window.location.href = targetLink.href;
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseModernSyntax</key>
						<true/>
						<key>UseText</key>
						<true/>
						<key>WebBrowser</key>
						<string>Google Chrome</string>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>727756217.309883</real>
				<key>ModificationDate</key>
				<real>731130896.223634</real>
				<key>Name</key>
				<string>gpts_step3_publish</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>83BC847D-9ADD-473F-8EEE-B1E72DECA6D7</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Global Macro Group</string>
		<key>ToggleMacroUID</key>
		<string>624D0696-FDCB-4262-B72B-59A721BE1E33</string>
		<key>UID</key>
		<string>804D32AF-0B39-439F-8EF3-493A833B14CA</string>
	</dict>
</array>
</plist>
